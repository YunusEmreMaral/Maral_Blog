#pragma checksum "C:\Users\imgoz\OneDrive\Masaüstü\Murat Yücedağ\CoreDemo\CoreDemo\Areas\Admin\Views\Writer\Index.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "2465ff5501e5c79c5da823f75ecb2981ede226380f360cea09264d1a2e7d5bbc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Writer_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Writer/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"2465ff5501e5c79c5da823f75ecb2981ede226380f360cea09264d1a2e7d5bbc", @"/Areas/Admin/Views/Writer/Index.cshtml")]
    #nullable restore
    public class Areas_Admin_Views_Writer_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\imgoz\OneDrive\Masaüstü\Murat Yücedağ\CoreDemo\CoreDemo\Areas\Admin\Views\Writer\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>Yazar Ajax İşlemleri</h1>
<br />
<button type=""button"" id=""btngetlist"" class=""btn btn-outline-primary"">Yazar Listesi</button>
<button type=""button"" id=""btngetbyid"" class=""btn btn-outline-success"">Yazar Getir</button>
<button type=""button"" id=""btnaddwriter"" class=""btn btn-outline-info"">Yazar Ekle</button>
<button type=""button"" id=""btndeletewriter"" class=""btn btn-outline-danger"">Yazar Sil</button>
<button type=""button"" id=""btnupdatewriter"" class=""btn btn-outline-danger"">Yazar Güncelle</button>

<br />
<br />
<div id=""writerlist"">
    Buraya Yazarlar gelecek
</div>
<br />
<div id=""writerget"">
    Buraya 1 yazar gelecek
</div>
<div>
    <input type=""text"" id=""writerid"" placeholder=""Yazar ID Değerini Girin"" class=""form-control"" />
</div>
<br />
<div>
    <input type=""text"" class=""form-control"" readonly=""readonly"" id=""txtwriterid"" placeholder=""Eklenecek Yazar Id"" />
    <input type=""text"" class=""form-control"" id=""txtwritername"" placeholder=""Eklenecek Yazar Adı"" />
</div>
<br />
<div>");
            WriteLiteral(@"
    <input type=""text"" class=""form-control"" id=""txtid"" placeholder=""Silinecek Yazar Id"" />
</div>
<br />
<div>
    <input type=""text"" class=""form-control"" id=""txtid1"" placeholder=""Güncellenecek Yazar Id"" />
    <input type=""text"" class=""form-control"" id=""txtname1"" placeholder=""Güncellenecek Yazar Adı"" />
</div>
");
            WriteLiteral("\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        $(document).ready(function () {
            $(""#btngetlist"").click(function () {
                $.ajax({
                    type: ""GET"",
                    url: ""/Admin/Writer/WriterList"",
                    success: function (data) {
                        var writers = JSON.parse(data);
                        var tablehtml = ""<table class='table table-bordered'><tr><th>Yazar ID</th><th>Yazar Adı</th></tr>"";
                        writers.forEach(function (writer) {
                            tablehtml += ""<tr><td>"" + writer.Id + ""</td><td>"" + writer.Name + ""</td></tr>"";
                        });
                        tablehtml += ""</table>"";
                        $(""#writerlist"").html(tablehtml);
                    }
                });
            }); /* yazarlar listesi */

            $(""#btngetbyid"").click(function () {
                var id = $(""#writerid"").val();
                $.ajax({
                    type: ""GET"",
                    u");
                WriteLiteral(@"rl: ""/Admin/Writer/GetWriterByID"",
                    data: { writerid: id },
                    success: function (data) {
                        var writer = JSON.parse(data);
                        var getvalue = ""<table class='table table-bordered'><tr><th>Yazar ID</th><th>Yazar Adı</th></tr><tr><td>"" + writer.Id + ""</td><td>"" + writer.Name + ""</td></tr></table>"";
                        $(""#writerget"").html(getvalue);
                    }
                });
            }); /* id ye göre yazar getirme */

            $(""#btnaddwriter"").click(function () {
                var writer = {
                    Id: $(""#txtwriterid"").val(),
                    Name: $(""#txtwritername"").val()
                };
                $.ajax({
                    type: ""POST"",
                    url: ""/Admin/Writer/AddWriter"",
                    data: JSON.stringify(writer),
                    contentType: ""application/json"",
                    success: function (data) {
                   ");
                WriteLiteral(@"     alert(""Yazar Ekleme İşlemi Başarılı Bir Şekilde Gerçekleşti"");
                    }
                });
            }); /* yazar ekleme */

            $(""#btndeletewriter"").click(function () {
                var id = $(""#txtid"").val();
                $.ajax({
                    type: ""POST"",
                    url: ""/Admin/Writer/DeleteWriter/"" + id,
                    dataType: ""json"",
                    success: function (data) {
                        alert(""Yazar Silme İşlemi Başarılı Bir Şekilde Gerçekleşti"");
                    }
                });
            }); /* yazar silme */

            $(""#btnupdatewriter"").click(function () {
                var writer = {
                    Id: $(""#txtid1"").val(),
                    Name: $(""#txtname1"").val()
                };
                $.ajax({
                    type: ""POST"",
                    url: ""/Admin/Writer/UpdateWriter"",
                    data: JSON.stringify(writer),
                    content");
                WriteLiteral(@"Type: ""application/json"",
                    success: function (data) {
                        alert(""Yazar Güncelleme İşlemi Başarılı Bir Şekilde Gerçekleşti"");
                    }
                });
            }); /* yazar güncelleme */
        });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
